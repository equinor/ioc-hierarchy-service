# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  tags:
    include:
    - v*
  branches:
    exclude:
    - wip*

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  feed-url: 'https://pkgs.dev.azure.com/equinorioc/_packaging/ioc-vcpkg/nuget/v3/index.json'
  VCPKG_BINARY_SOURCES: 'clear;nuget,https://pkgs.dev.azure.com/equinorioc/_packaging/ioc-vcpkg/nuget/v3/index.json,readwrite'

stages:
- stage: Build_and_test
  displayName: Build image
  jobs:  
  - job: Build
    timeoutInMinutes: 120
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      submodules: true
    - task: NuGetAuthenticate@0
    - task: Docker@2
      displayName: Build Docker image
      inputs:
        command: 'build'
        Dockerfile: './Dockerfile'
        tags: 'tag-hierarchy'
        arguments: '--build-arg FEED_URL=$(feed-url) --build-arg FEED_ACCESSTOKEN=$(System.AccessToken)'
    - bash: docker build -t tag-hierarchy --build-arg FEED_URL=$(feed-url) --build-arg FEED_ACCESSTOKEN=$(RUAJ-PAT) ./
    - bash: docker create --name tag-hierarchy-service tag-hierarchy
    - bash: docker cp tag-hierarchy-service:/usr/src/app/ioc-hierarchy-service-docker-build/tag-hierarchy-2.0.0-alpha1-x86-64.deb .
    - bash: docker cp tag-hierarchy-service:/usr/src/app/ioc-hierarchy-service/grpc/client/dist/tag_hierarchy_grpc_client-2.0.0a1-py3-none-any.whl .
    - bash: docker cp tag-hierarchy-service:/usr/src/app/ioc-hierarchy-service-docker-build/grpc/grpc_proto.pb .
    - bash: docker run -w /usr/src/app/ioc-hierarchy-service --name continuous tag-hierarchy bash -c 'make continuous'
    - bash: docker cp continuous:/usr/src/app/ioc-hierarchy-service-docker-build/Testing/ .
    - bash: docker run -w /usr/src/app/ioc-hierarchy-service --name nightly tag-hierarchy bash -c 'make nightly'
      condition: or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'cTest'
        testResultsFiles: 'Testing/**/Test.xml' 
    - task: GithubRelease@0
      displayName: 'Create GitHub Release'
      inputs:
        gitHubConnection: 'IOC DPL Release'
        repositoryName: equinor/ioc-hierarchy-service
        assets: |
          ./*.deb
          ./*.whl
          ./*.pb
